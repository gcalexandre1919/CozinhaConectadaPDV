#!/usr/bin/env pwsh
# Script para testar o sistema PDV completo - todas as funcionalidades

Write-Host "=== TESTE SISTEMA PDV COMPLETO ===" -ForegroundColor Green
Write-Host "Testando todas as funcionalidades implementadas..." -ForegroundColor Yellow

$baseUrl = "http://localhost:5001"

# Fun√ß√£o para fazer requisi√ß√µes HTTP
function Invoke-ApiTest {
    param(
        [string]$Endpoint,
        [string]$Method = "GET",
        [string]$Description
    )
    
    try {
        Write-Host "`n[$Method] $Description" -ForegroundColor Cyan
        Write-Host "URL: $baseUrl$Endpoint" -ForegroundColor Gray
        
        $response = Invoke-RestMethod -Uri "$baseUrl$Endpoint" -Method $Method -ErrorAction Stop
        Write-Host "‚úÖ Sucesso - Dados retornados: $(($response | ConvertTo-Json -Depth 1).Length) caracteres" -ForegroundColor Green
        return $response
    }
    catch {
        Write-Host "‚ùå Erro: $($_.Exception.Message)" -ForegroundColor Red
        return $null
    }
}

Write-Host "`nüîç TESTANDO ENDPOINTS DA API..." -ForegroundColor Magenta

# 1. Teste de Categorias (com impressoras associadas)
Write-Host "`nüìÅ GEST√ÉO DE CATEGORIAS" -ForegroundColor Blue
$categorias = Invoke-ApiTest -Endpoint "/api/categorias" -Description "Listar todas as categorias"
$categoriasSimple = Invoke-ApiTest -Endpoint "/api/categoriassimple" -Description "Listar categorias simplificadas"

# 2. Teste de Impressoras
Write-Host "`nüñ®Ô∏è GEST√ÉO DE IMPRESSORAS" -ForegroundColor Blue
$impressoras = Invoke-ApiTest -Endpoint "/api/impressoras" -Description "Listar todas as impressoras"

# 3. Teste de Clientes
Write-Host "`nüë• GEST√ÉO DE CLIENTES" -ForegroundColor Blue
$clientes = Invoke-ApiTest -Endpoint "/api/clientes" -Description "Listar todos os clientes"

# 4. Teste de Produtos
Write-Host "`nüõçÔ∏è GEST√ÉO DE PRODUTOS" -ForegroundColor Blue
$produtos = Invoke-ApiTest -Endpoint "/api/produtos" -Description "Listar todos os produtos"

# 5. Teste de Pedidos
Write-Host "`nüìã GEST√ÉO DE PEDIDOS" -ForegroundColor Blue
$pedidos = Invoke-ApiTest -Endpoint "/api/pedidos" -Description "Listar todos os pedidos"

# 6. Teste de Impress√£o
Write-Host "`nüñ®Ô∏è SISTEMA DE IMPRESS√ÉO" -ForegroundColor Blue
$impressao = Invoke-ApiTest -Endpoint "/api/impressao/impressoras" -Description "Listar impressoras para impress√£o"

# 7. Teste de Relat√≥rios
Write-Host "`nüìä SISTEMA DE RELAT√ìRIOS" -ForegroundColor Blue
$relatorios = Invoke-ApiTest -Endpoint "/api/relatorios/vendas-periodo" -Description "Relat√≥rios de vendas"

Write-Host "`n=== RESUMO DOS TESTES ===" -ForegroundColor Green

$endpoints = @(
    @{ Nome = "Categorias"; Status = if($categorias) { "‚úÖ" } else { "‚ùå" } }
    @{ Nome = "Categorias Simple"; Status = if($categoriasSimple) { "‚úÖ" } else { "‚ùå" } }
    @{ Nome = "Impressoras"; Status = if($impressoras) { "‚úÖ" } else { "‚ùå" } }
    @{ Nome = "Clientes"; Status = if($clientes) { "‚úÖ" } else { "‚ùå" } }
    @{ Nome = "Produtos"; Status = if($produtos) { "‚úÖ" } else { "‚ùå" } }
    @{ Nome = "Pedidos"; Status = if($pedidos) { "‚úÖ" } else { "‚ùå" } }
    @{ Nome = "Impress√£o"; Status = if($impressao) { "‚úÖ" } else { "‚ùå" } }
    @{ Nome = "Relat√≥rios"; Status = if($relatorios) { "‚úÖ" } else { "‚ùå" } }
)

foreach ($endpoint in $endpoints) {
    Write-Host "$($endpoint.Status) $($endpoint.Nome)" -ForegroundColor $(if($endpoint.Status -eq "‚úÖ") { "Green" } else { "Red" })
}

$sucessos = ($endpoints | Where-Object { $_.Status -eq "‚úÖ" }).Count
$total = $endpoints.Count
$percentual = [math]::Round(($sucessos / $total) * 100, 1)

Write-Host "`nüìà RESULTADO FINAL: $sucessos/$total endpoints funcionando ($percentual%)" -ForegroundColor $(if($percentual -ge 90) { "Green" } else { if($percentual -ge 70) { "Yellow" } else { "Red" } })

if ($percentual -eq 100) {
    Write-Host "üéâ SISTEMA 100% FUNCIONAL! Todas as funcionalidades est√£o operacionais." -ForegroundColor Green
} elseif ($percentual -ge 90) {
    Write-Host "‚ú® SISTEMA QUASE COMPLETO! Poucas funcionalidades pendentes." -ForegroundColor Yellow
} else {
    Write-Host "‚ö†Ô∏è SISTEMA NECESSITA AJUSTES para funcionalidade completa." -ForegroundColor Red
}

Write-Host "`nüåê ACESSOS DIRETOS:" -ForegroundColor Cyan
Write-Host "Web Interface: http://localhost:5000" -ForegroundColor White
Write-Host "API Swagger: http://localhost:5001/swagger" -ForegroundColor White
Write-Host "`nSistema pronto para uso! üöÄ" -ForegroundColor Green
