// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaPDV.Infrastructure.Data;

#nullable disable

namespace SistemaPDV.Infrastructure.Migrations
{
    [DbContext(typeof(PDVDbContext))]
    [Migration("20250907201914_UpdateProdutosWithRestauranteId")]
    partial class UpdateProdutosWithRestauranteId
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("SistemaPDV.Core.Entities.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RestauranteId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RestauranteId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SistemaPDV.Core.Entities.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int?>("ImpressoraId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("RestauranteId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ImpressoraId");

                    b.HasIndex("RestauranteId");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("SistemaPDV.Core.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<string>("CNPJ")
                        .HasMaxLength(14)
                        .HasColumnType("TEXT");

                    b.Property<string>("CPF")
                        .HasMaxLength(11)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("RestauranteId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CNPJ");

                    b.HasIndex("CPF");

                    b.HasIndex("Email");

                    b.HasIndex("Nome");

                    b.HasIndex("RestauranteId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("SistemaPDV.Core.Entities.ClienteEndereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("CEP")
                        .HasMaxLength(8)
                        .HasColumnType("TEXT");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Complemento")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EnderecoPrincipal")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Numero")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("Referencia")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CEP");

                    b.HasIndex("ClienteId");

                    b.ToTable("ClienteEnderecos");
                });

            modelBuilder.Entity("SistemaPDV.Core.Entities.ConfiguracaoImpressao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AbrirGavetaAutomaticamente")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CabecalhoPersonalizado")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("CortarPapelAutomaticamente")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ImpressoraPadraoId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ImprimirAutomaticamente")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MargemEsquerda")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MargemSuperior")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumeroVias")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RodapePersonalizado")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("TamanhoFonte")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ImpressoraPadraoId");

                    b.ToTable("ConfiguracoesImpressao");
                });

            modelBuilder.Entity("SistemaPDV.Core.Entities.FilaImpressao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataProcessamento")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ImpressoraId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MensagemErro")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int?>("PedidoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TentativasImpressao")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ImpressoraId");

                    b.HasIndex("PedidoId");

                    b.ToTable("FilaImpressao");
                });

            modelBuilder.Entity("SistemaPDV.Core.Entities.Impressora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AbrirGaveta")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ativa")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Caminho")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<bool>("CortarPapel")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("TEXT");

                    b.Property<int>("LarguraPapel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("Tipo")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Impressoras");
                });

            modelBuilder.Entity("SistemaPDV.Core.Entities.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataFinalizacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("PercentualGarcom")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("RestauranteId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("TaxaEntrega")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Tipo")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("ValorGarcom")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("DataCriacao");

                    b.HasIndex("RestauranteId");

                    b.HasIndex("Status");

                    b.HasIndex("Tipo");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("SistemaPDV.Core.Entities.PedidoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("PedidoId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PrecoUnitario")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("PedidoItens");
                });

            modelBuilder.Entity("SistemaPDV.Core.Entities.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("RestauranteId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("RestauranteId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("SistemaPDV.Core.Entities.RelatorioVenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataVenda")
                        .HasColumnType("TEXT");

                    b.Property<string>("Observacoes")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalVenda")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.ToTable("RelatoriosVenda");
                });

            modelBuilder.Entity("SistemaPDV.Core.Entities.Restaurante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bairro")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("CEP")
                        .HasMaxLength(8)
                        .HasColumnType("TEXT");

                    b.Property<string>("CNPJ")
                        .HasMaxLength(14)
                        .HasColumnType("TEXT");

                    b.Property<string>("Cidade")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Complemento")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Endereco")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Numero")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("UF")
                        .HasMaxLength(2)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Restaurantes");
                });

            modelBuilder.Entity("SistemaPDV.Core.Entities.VendaProduto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataVenda")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PrecoUnitario")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Total")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.ToTable("VendaProdutos");
                });

            modelBuilder.Entity("SistemaPDV.Core.Entities.ApplicationUser", b =>
                {
                    b.HasOne("SistemaPDV.Core.Entities.Restaurante", "Restaurante")
                        .WithMany()
                        .HasForeignKey("RestauranteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurante");
                });

            modelBuilder.Entity("SistemaPDV.Core.Entities.Categoria", b =>
                {
                    b.HasOne("SistemaPDV.Core.Entities.Impressora", "Impressora")
                        .WithMany()
                        .HasForeignKey("ImpressoraId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("SistemaPDV.Core.Entities.Restaurante", "Restaurante")
                        .WithMany()
                        .HasForeignKey("RestauranteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Impressora");

                    b.Navigation("Restaurante");
                });

            modelBuilder.Entity("SistemaPDV.Core.Entities.Cliente", b =>
                {
                    b.HasOne("SistemaPDV.Core.Entities.Restaurante", "Restaurante")
                        .WithMany()
                        .HasForeignKey("RestauranteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurante");
                });

            modelBuilder.Entity("SistemaPDV.Core.Entities.ClienteEndereco", b =>
                {
                    b.HasOne("SistemaPDV.Core.Entities.Cliente", "Cliente")
                        .WithMany("Enderecos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("SistemaPDV.Core.Entities.ConfiguracaoImpressao", b =>
                {
                    b.HasOne("SistemaPDV.Core.Entities.Impressora", "ImpressoraPadrao")
                        .WithMany()
                        .HasForeignKey("ImpressoraPadraoId");

                    b.Navigation("ImpressoraPadrao");
                });

            modelBuilder.Entity("SistemaPDV.Core.Entities.FilaImpressao", b =>
                {
                    b.HasOne("SistemaPDV.Core.Entities.Impressora", "Impressora")
                        .WithMany()
                        .HasForeignKey("ImpressoraId");

                    b.HasOne("SistemaPDV.Core.Entities.Pedido", "Pedido")
                        .WithMany()
                        .HasForeignKey("PedidoId");

                    b.Navigation("Impressora");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("SistemaPDV.Core.Entities.Pedido", b =>
                {
                    b.HasOne("SistemaPDV.Core.Entities.Cliente", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SistemaPDV.Core.Entities.Restaurante", "Restaurante")
                        .WithMany("Pedidos")
                        .HasForeignKey("RestauranteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Restaurante");
                });

            modelBuilder.Entity("SistemaPDV.Core.Entities.PedidoItem", b =>
                {
                    b.HasOne("SistemaPDV.Core.Entities.Pedido", "Pedido")
                        .WithMany("Itens")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaPDV.Core.Entities.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("SistemaPDV.Core.Entities.Produto", b =>
                {
                    b.HasOne("SistemaPDV.Core.Entities.Categoria", "Categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaPDV.Core.Entities.Restaurante", "Restaurante")
                        .WithMany()
                        .HasForeignKey("RestauranteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Restaurante");
                });

            modelBuilder.Entity("SistemaPDV.Core.Entities.VendaProduto", b =>
                {
                    b.HasOne("SistemaPDV.Core.Entities.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("SistemaPDV.Core.Entities.Categoria", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("SistemaPDV.Core.Entities.Cliente", b =>
                {
                    b.Navigation("Enderecos");

                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("SistemaPDV.Core.Entities.Pedido", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("SistemaPDV.Core.Entities.Restaurante", b =>
                {
                    b.Navigation("Pedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
