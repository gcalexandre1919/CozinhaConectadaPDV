@page "/register"
@rendermode InteractiveServer
@using SistemaPDV.Core.DTOs
@using SistemaPDV.Web.Services
@inject IAuthWebService AuthService
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime

<PageTitle>Registrar - Sistema PDV</PageTitle>

<div class="container-fluid vh-100 d-flex align-items-center justify-content-center bg-gradient" style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);">
    <div class="row w-100 justify-content-center">
        <div class="col-md-6">
            <div class="card shadow-lg">
                <div class="card-body p-5">
                    <div class="text-center mb-4">
                        <i class="fas fa-utensils fa-3x text-primary mb-3"></i>
                        <h3 class="fw-bold">Criar Conta</h3>
                        <p class="text-muted">Registre seu restaurante no sistema</p>
                    </div>

                    @if (!string.IsNullOrEmpty(mensagemErro))
                    {
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            <i class="fas fa-exclamation-circle me-2"></i>@mensagemErro
                            <button type="button" class="btn-close" @onclick="() => mensagemErro = string.Empty"></button>
                        </div>
                    }

                    @if (!string.IsNullOrEmpty(mensagemSucesso))
                    {
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            <i class="fas fa-check-circle me-2"></i>@mensagemSucesso
                            <button type="button" class="btn-close" @onclick="() => mensagemSucesso = string.Empty"></button>
                        </div>
                    }

                    <form @onsubmit="@FazerRegistro" @onsubmit:preventDefault="true">
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="email" class="form-label">Email *</label>
                                <div class="input-group">
                                    <span class="input-group-text">
                                        <i class="fas fa-envelope"></i>
                                    </span>
                                    <input type="email" id="email" class="form-control" placeholder="seu@email.com" 
                                           @bind="registerDto.Email" required />
                                </div>
                            </div>

                            <div class="col-md-6 mb-3">
                                <label for="senha" class="form-label">Senha *</label>
                                <div class="input-group">
                                    <span class="input-group-text">
                                        <i class="fas fa-lock"></i>
                                    </span>
                                    <input type="password" id="senha" class="form-control" placeholder="Mínimo 6 caracteres"
                                           @bind="registerDto.Password" required minlength="6" />
                                </div>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label for="nome" class="form-label">Nome Completo</label>
                            <div class="input-group">
                                <span class="input-group-text">
                                    <i class="fas fa-user"></i>
                                </span>
                                <input type="text" id="nome" class="form-control" placeholder="Seu nome completo"
                                       @bind="registerDto.Nome" />
                            </div>
                        </div>

                        <div class="mb-3">
                            <label for="restauranteId" class="form-label">Restaurante *</label>
                            <div class="input-group">
                                <span class="input-group-text">
                                    <i class="fas fa-utensils"></i>
                                </span>
                                <select id="restauranteId" class="form-select" @bind="registerDto.RestauranteId" required>
                                    <option value="0">Selecione o restaurante...</option>
                                    <option value="1">Restaurante Padrão</option>
                                </select>
                            </div>
                            <div class="form-text">Por enquanto, use o restaurante padrão criado automaticamente.</div>
                        </div>

                        <div class="d-grid mb-3">
                            <button type="submit" class="btn btn-success btn-lg" disabled="@efetuandoRegistro">
                                @if (efetuandoRegistro)
                                {
                                    <span class="spinner-border spinner-border-sm me-2"></span>
                                }
                                <i class="fas fa-user-plus me-2"></i>Criar Conta
                            </button>
                        </div>

                        <div class="text-center">
                            <p class="mb-0 text-muted">Já tem uma conta?</p>
                            <a href="/login" class="btn btn-link">
                                <i class="fas fa-sign-in-alt me-2"></i>Fazer login
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private RegisterDto registerDto = new() { RestauranteId = 1 };
    private bool efetuandoRegistro = false;
    private string mensagemErro = string.Empty;
    private string mensagemSucesso = string.Empty;

    private async Task FazerRegistro()
    {
        if (string.IsNullOrWhiteSpace(registerDto.Email) || 
            string.IsNullOrWhiteSpace(registerDto.Password) ||
            registerDto.RestauranteId == 0)
        {
            mensagemErro = "Por favor, preencha todos os campos obrigatórios.";
            return;
        }

        if (registerDto.Password.Length < 6)
        {
            mensagemErro = "A senha deve ter pelo menos 6 caracteres.";
            return;
        }

        efetuandoRegistro = true;
        mensagemErro = string.Empty;
        mensagemSucesso = string.Empty;

        try
        {
            var resultado = await AuthService.RegisterAsync(registerDto);
            
            if (resultado.Sucesso)
            {
                mensagemSucesso = "Conta criada com sucesso! Você pode fazer login agora.";
                
                // Aguardar 2 segundos e redirecionar para login
                await Task.Delay(2000);
                Navigation.NavigateTo("/login");
            }
            else
            {
                mensagemErro = resultado.Erro ?? "Erro ao criar conta";
            }
        }
        catch (Exception ex)
        {
            mensagemErro = $"Erro de conexão: {ex.Message}";
        }
        finally
        {
            efetuandoRegistro = false;
        }
    }
}
